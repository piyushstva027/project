---
- name: Ensure that the ansible user exists on all servers with key based access
  hosts:
    - servers
    - localhost
  remote_user: vagrant
  vars:
    ansible_password: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        38666538346230373665666131353739383630343264663933383137366530656536386633616366
        6431386266393233333337393131633137376463386433300a303532613034313163613831393133
        64333533306230656431613130626337343764613035636534326432323132303161366464663962
        3939616665356565360a353439623766326335646464643836303635646233393166376363356564
        3237

    password: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        61326536393037396636336364383130336134353466356636626135623537303563333666653165
        3831356264633932383030663566343834393761303439300a363362343734336338656465646235
        62353965386335393434626664616562646663306637313264623765313064316264346535646237 
        3338306666303739360a616332303835633831666539343739613738636164336139363931323132
        343

  


  become: true
  tasks:
    - name: Create the ansible user on the managed hosts
      user: &createuser
        name: ansible
        state: present
        create_home: true
      when: '"servers" in group_names'
    
    - block:
      - name: Create the ansible user on the local machine
        user:
          <<: *createuser
          password: "{{ password }}"
          generate_ssh_key: true
 
      - name: Read in the ssh key from the local machine's ansible user
        shell: /bin/cat /home/ansible/.ssh/id_rsa.pub
        become_user: ansible
        register: ssh_key
      when: inventory_hostname == 'localhost'
        
    - name: Create the file in sudoers.d for the ansible user
      copy:
        content: "ansible ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/ansible

      
    - name: Copy over the ssh public key for key based access
      authorized_key:
          user: ansible
          key: "{{ hostvars['localhost']['ssh_key']['stdout'] }}"
          state: present

